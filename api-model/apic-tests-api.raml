#%RAML 1.0
title: API Components tests REST API
version: v1
baseUri: http://localhost:8080/api
mediaType: [application/json]
description: |
  An API for API components automated tests.
  It allows to schedule tests of API comonents and observer the results.

traits:
  Paginated: !include traits/paginated.raml

documentation:
  - title: Authorization
    content: !include documentation/authorization.md

types:
  Test: !include types/test.raml
  TestCreate: !include types/create-test.raml
  Component: !include types/component.raml
  Log: !include types/log.raml
  User: !include types/user.raml
  JWT: !include types/jwt-token.raml
  JWTcreate: !include types/jwt-token-create.raml
  JWTinfo: !include types/jwt-token-info.raml
  ErrorResource:
    description: A response that is errored
    type: object
    properties:
      error:
        type: boolean
        required: true
        example: true
        default: true
        description: Indicate that the response is errored.
      message:
        type: string
        description: The error message associated with the error.
        required: true
securitySchemes:
  JwtSecurity: !include security/x-api-token.raml

/tests:
  displayName: Tests
  get:
    is: [Paginated: {resourceType: Test}]
    displayName: List tests
    description: |
      Lists all available tests. By default it returns first 25 tests.
      Use `limit` and `nextPageToken` parameters to enable pagination.
  post:
    displayName: Schedule a test
    securedBy: [JwtSecurity]
    description: |
      This method creates a test and schedules worker noed to execute the test.

      Note, this endpoint requires Google authentication. Currently you can
      interact with this method using web app only.
    body:
      type: TestCreate
    responses:
      200:
         body:
           type: object
           properties:
             error:
               required: false
               type: boolean
               description: Error message if any.
             id:
               required: false
               type: string
               description: An ID of scheduled test. Not set when error.
  /{testId}:
    uriParameters:
      testId:
        displayName: Test id
    get:
      displayName: Get a test
      description: Returns a test.
      responses:
        200:
          body:
            type: Test
        404:
          body:
            displayName: Test not found
            type: ErrorResource
    delete:
      securedBy: [JwtSecurity]
      displayName: Remove test
      description: |
        Removes the test.
        Note, currently the test can only be deleted when its status is `queued`.

        Note, this endpoint requires Google authentication. Currently you can
        interact with this method using web app only.
      responses:
        204:
          description: Status returned when the test has been deleted.
        400:
          description: Returned when `status` of the test is not `queued`.
          body:
            displayName: Test cannot be deleted at this time.
            type: ErrorResource
        404:
          description: The test cannot be found
          body:
            displayName: Test not found
            type: ErrorResource
    /components:
      get:
        is: [Paginated: {resourceType: Component}]
        displayName: List tested components
        description: |
          Lists componets processed in a test.
      /{componentName}:
        uriParameters:
          componentName:
            type: string
            description: Component name
            example: api-annotation-document
        get:
          displayName: Get a component
          description: Returns component information.
          responses:
            200:
              body:
                type: Component
            404:
              body:
                displayName: Component not found
                type: ErrorResource
        /logs:
          get:
            displayName: List logs
            is: [Paginated: {resourceType: Log}]
            description: |
              Returns browsers execution logs for the test
          /{logId}:
            uriParameters:
              logId:
                type: string
                displayName: Log id
                description: ID of the log
            get:
              displayName: Get test execution log
              responses:
                200:
                  body:
                    type: Log
                404:
                  body:
                    displayName: Log not found
                    type: ErrorResource
/me:
  displayName: User
  get:
    displayName: Get current user
    description: |
      Returns an information about current user.
      The information may come from current session on the web server or
      it can be encoded in JWT.
    responses:
      200:
        body:
          type: User
  /tokens:
    securedBy: [JwtSecurity]
    displayName: JSON tokens
    get:
      is: [Paginated: {resourceType: JWT}]
      displayName: List tokens
      description: |
        Lists created by the user authorization tokens,
    post:
      displayName: Create a token
      description: Creates a new authorization token.
      body:
        type: JWTcreate
      responses:
        200:
          description: Token has been created
          body:
            type: JWT
        400:
          description: Returned when request verification failed.
          body:
            displayName: Request validation failed
            type: ErrorResource
    /{tokenId}:
      uriParameters:
        tokenId:
          type: string
          displayName: Token datastore id
          description: Received from create / list operation token id.
      get:
        displayName: Get a token
        responses:
          200:
            body:
              type: JWT
          404:
            body:
              displayName: Token not found
              type: ErrorResource
      delete:
        displayName: Revoke token
        description: |
          Used to revoke the token. Any call to the service with the token will
          end up receiving 401 status code.
        responses:
          204:
            description: The token has been deleted.
/tokeninfo:
  get:
    displayName: Token info
    description: |
      Allows to gen basic information about the token without being authorized.
      It only returns basic information about the token without user information.
    queryParameters:
      token:
        type: string
        description: The token to test.
    responses:
      200:
        description: The token has been processed.
        body:
          type: JWTinfo
      400:
        description: Token processing error response.
        body:
          displayName: Token is invalid.
          type: ErrorResource
